package util

import (
	"testing"
	"time"
)

var (
	tmp = &GCStats{}
)

func TestGC(t *testing.T) {
	start := time.Now()
	tt()
	t.Log(GetGCState())
	start1 := time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
	tt()
	tt()
	tt()
	tt()
	tt()
	t.Log(GetGCState())
	start1 = time.Now()
	t.Log(start1.Sub(start))
	start = start1
}

func tt() {
	for i := 0; i < 1000000; i++ {
		tmp = &GCStats{}
	}
}
